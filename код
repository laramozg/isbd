CREATE TABLE IF NOT EXISTS Human
(
    personId   SERIAL PRIMARY KEY,
    name       VARCHAR(255) NOT NULL,
    age        INTEGER
            CHECK ( age > 0)
);
CREATE TABLE IF NOT EXISTS State
(
    stateId            SERIAL PRIMARY KEY,
    descriptionState   VARCHAR(255) NOT NULL,
    personId           INTEGER REFERENCES Human ON DELETE CASCADE NOT NULL,
    time               TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Location
(
    locationId        SERIAL PRIMARY KEY,
    longitude         VARCHAR(255),
    width             VARCHAR(255),
    descriptionPlace  VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Ability
(
    abilityId       SERIAL PRIMARY KEY,
    nameAbility     VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS Dinosaur
(
    dinosaurId       SERIAL PRIMARY KEY,
    dinosaurName     VARCHAR(255) NOT NULL,
    weight           INTEGER,
    length           INTEGER
);

CREATE TABLE IF NOT EXISTS DinosaurAbility
(
    dinosaurId     INTEGER REFERENCES Dinosaur ON DELETE CASCADE NOT NULL,
    abilityId      INTEGER REFERENCES Ability ON DELETE CASCADE NOT NULL
);

CREATE TABLE IF NOT EXISTS DinosaurAttacks
(
    attacksId         SERIAL PRIMARY KEY,
    dinosaurId        INTEGER REFERENCES Dinosaur ON DELETE CASCADE NOT NULL,
    locationId        INTEGER REFERENCES Location ON DELETE CASCADE NOT NULL,
    dataAttack        DATE NOT NULL

);

CREATE TABLE IF NOT EXISTS Victims
(
    victimId      SERIAL PRIMARY KEY,
    attacksId     INTEGER REFERENCES DinosaurAttacks ON DELETE CASCADE NOT NULL,
    personId      INTEGER REFERENCES Human ON DELETE CASCADE NOT NULL
);







INSERT INTO Human(name, age)
VALUES ('Maria', 21),
       ('John', 50),
       ('Tim', 26),
       ('Lexi', 15),
       ('Alex', 56);

INSERT INTO State(descriptionState, personId, time)
VALUES ('потеря сознания', 4, '2022-12-09 10:47:00'),
       ('боль в голове', 3, '2022-12-09 08:10:00'),
       ('смерть', 1, '2022-11-04 10:37:22'),
       ('боль в животе', 2, '2023-01-04 03:03:03');

INSERT INTO Location(longitude, width, descriptionPlace)
VALUES ('55^47.450','42^30.14','в машине'),
       ('54^41.444','39^47.50','возле забора'),
       ('55^40.432','43^27.50','около двери администрации');


INSERT INTO Dinosaur(dinosaurName, weight, length)
VALUES ('тиранозавр', 1000,25),
       ('велоцираптор', 560,10),
       ('дилофозарус', 850,5);

INSERT INTO Ability(nameAbility)
VALUES ('рога'),
       ('роговые пластины'),
       ('костные пластины');

INSERT INTO DinosaurAbility(dinosaurId, abilityId)
VALUES (1, 1),
       (1, 3),
       (2, 2);

INSERT INTO DinosaurAttacks(dinosaurId, locationId, dataAttack)
VALUES (1, 3, '2022-11-04'),
       (2, 2, '2023-01-04'),
       (3, 1, '2022-12-09'),
       (3, 1, '2022-12-09');

INSERT INTO Victims(attacksId, personId)
VALUES (2, 4),
       (2, 3),
       (3, 1),
       (3, 2),
       (2, 1);









SELECT dinosaurname, nameAbility from ability join dinosaurability on dinosaurability.abilityid = ability.abilityid join dinosaur on dinosaurability.dinosaurid = dinosaur.dinosaurid;

Select count(attacksid), name from victims join human on human.personid = victims.personid group by human.personid;

Select dinosaurName from Dinosaur where weight = (Select max(weight) from Dinosaur);
